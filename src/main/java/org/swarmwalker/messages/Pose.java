// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: core.proto
// Protobuf Java Version: 4.31.1

package org.swarmwalker.messages;

/**
 * Protobuf type {@code org.swarmwalker.messages.Pose}
 */
@com.google.protobuf.Generated
public final class Pose extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.swarmwalker.messages.Pose)
        PoseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      Pose.class.getName());
  }
  // Use Pose.newBuilder() to construct.
  private Pose(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Pose() {
    type_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.swarmwalker.messages.Core.internal_static_org_swarmwalker_messages_Pose_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.swarmwalker.messages.Core.internal_static_org_swarmwalker_messages_Pose_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.swarmwalker.messages.Pose.class, org.swarmwalker.messages.Pose.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <code>.org.swarmwalker.messages.Type type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.org.swarmwalker.messages.Type type = 1;</code>
   * @return The type.
   */
  @Override public org.swarmwalker.messages.Type getType() {
    org.swarmwalker.messages.Type result = org.swarmwalker.messages.Type.forNumber(type_);
    return result == null ? org.swarmwalker.messages.Type.UNRECOGNIZED : result;
  }

  public static final int X_FIELD_NUMBER = 2;
  private float x_ = 0F;
  /**
   * <code>float x = 2;</code>
   * @return The x.
   */
  @Override
  public float getX() {
    return x_;
  }

  public static final int Y_FIELD_NUMBER = 3;
  private float y_ = 0F;
  /**
   * <code>float y = 3;</code>
   * @return The y.
   */
  @Override
  public float getY() {
    return y_;
  }

  public static final int Z_FIELD_NUMBER = 4;
  private float z_ = 0F;
  /**
   * <code>float z = 4;</code>
   * @return The z.
   */
  @Override
  public float getZ() {
    return z_;
  }

  public static final int W_FIELD_NUMBER = 5;
  private float w_ = 0F;
  /**
   * <code>float w = 5;</code>
   * @return The w.
   */
  @Override
  public float getW() {
    return w_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != org.swarmwalker.messages.Type.Cartesian.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (Float.floatToRawIntBits(x_) != 0) {
      output.writeFloat(2, x_);
    }
    if (Float.floatToRawIntBits(y_) != 0) {
      output.writeFloat(3, y_);
    }
    if (Float.floatToRawIntBits(z_) != 0) {
      output.writeFloat(4, z_);
    }
    if (Float.floatToRawIntBits(w_) != 0) {
      output.writeFloat(5, w_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != org.swarmwalker.messages.Type.Cartesian.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (Float.floatToRawIntBits(x_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, x_);
    }
    if (Float.floatToRawIntBits(y_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, y_);
    }
    if (Float.floatToRawIntBits(z_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, z_);
    }
    if (Float.floatToRawIntBits(w_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, w_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.swarmwalker.messages.Pose)) {
      return super.equals(obj);
    }
    org.swarmwalker.messages.Pose other = (org.swarmwalker.messages.Pose) obj;

    if (type_ != other.type_) return false;
    if (Float.floatToIntBits(getX())
        != Float.floatToIntBits(
            other.getX())) return false;
    if (Float.floatToIntBits(getY())
        != Float.floatToIntBits(
            other.getY())) return false;
    if (Float.floatToIntBits(getZ())
        != Float.floatToIntBits(
            other.getZ())) return false;
    if (Float.floatToIntBits(getW())
        != Float.floatToIntBits(
            other.getW())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + X_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getX());
    hash = (37 * hash) + Y_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getY());
    hash = (37 * hash) + Z_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getZ());
    hash = (37 * hash) + W_FIELD_NUMBER;
    hash = (53 * hash) + Float.floatToIntBits(
        getW());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.swarmwalker.messages.Pose parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.swarmwalker.messages.Pose parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.swarmwalker.messages.Pose parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.swarmwalker.messages.Pose parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.swarmwalker.messages.Pose parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.swarmwalker.messages.Pose parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.swarmwalker.messages.Pose prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.swarmwalker.messages.Pose}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.swarmwalker.messages.Pose)
      PoseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.swarmwalker.messages.Core.internal_static_org_swarmwalker_messages_Pose_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.swarmwalker.messages.Core.internal_static_org_swarmwalker_messages_Pose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.swarmwalker.messages.Pose.class, org.swarmwalker.messages.Pose.Builder.class);
    }

    // Construct using org.swarmwalker.messages.Pose.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
      w_ = 0F;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.swarmwalker.messages.Core.internal_static_org_swarmwalker_messages_Pose_descriptor;
    }

    @Override
    public org.swarmwalker.messages.Pose getDefaultInstanceForType() {
      return org.swarmwalker.messages.Pose.getDefaultInstance();
    }

    @Override
    public org.swarmwalker.messages.Pose build() {
      org.swarmwalker.messages.Pose result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public org.swarmwalker.messages.Pose buildPartial() {
      org.swarmwalker.messages.Pose result = new org.swarmwalker.messages.Pose(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.swarmwalker.messages.Pose result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.x_ = x_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.y_ = y_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.z_ = z_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.w_ = w_;
      }
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.swarmwalker.messages.Pose) {
        return mergeFrom((org.swarmwalker.messages.Pose)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.swarmwalker.messages.Pose other) {
      if (other == org.swarmwalker.messages.Pose.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (Float.floatToRawIntBits(other.getX()) != 0) {
        setX(other.getX());
      }
      if (Float.floatToRawIntBits(other.getY()) != 0) {
        setY(other.getY());
      }
      if (Float.floatToRawIntBits(other.getZ()) != 0) {
        setZ(other.getZ());
      }
      if (Float.floatToRawIntBits(other.getW()) != 0) {
        setW(other.getW());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 21: {
              x_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              y_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 37: {
              z_ = input.readFloat();
              bitField0_ |= 0x00000008;
              break;
            } // case 37
            case 45: {
              w_ = input.readFloat();
              bitField0_ |= 0x00000010;
              break;
            } // case 45
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <code>.org.swarmwalker.messages.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.org.swarmwalker.messages.Type type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.org.swarmwalker.messages.Type type = 1;</code>
     * @return The type.
     */
    @Override
    public org.swarmwalker.messages.Type getType() {
      org.swarmwalker.messages.Type result = org.swarmwalker.messages.Type.forNumber(type_);
      return result == null ? org.swarmwalker.messages.Type.UNRECOGNIZED : result;
    }
    /**
     * <code>.org.swarmwalker.messages.Type type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(org.swarmwalker.messages.Type value) {
      if (value == null) { throw new NullPointerException(); }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.org.swarmwalker.messages.Type type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private float x_ ;
    /**
     * <code>float x = 2;</code>
     * @return The x.
     */
    @Override
    public float getX() {
      return x_;
    }
    /**
     * <code>float x = 2;</code>
     * @param value The x to set.
     * @return This builder for chaining.
     */
    public Builder setX(float value) {

      x_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float x = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearX() {
      bitField0_ = (bitField0_ & ~0x00000002);
      x_ = 0F;
      onChanged();
      return this;
    }

    private float y_ ;
    /**
     * <code>float y = 3;</code>
     * @return The y.
     */
    @Override
    public float getY() {
      return y_;
    }
    /**
     * <code>float y = 3;</code>
     * @param value The y to set.
     * @return This builder for chaining.
     */
    public Builder setY(float value) {

      y_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>float y = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000004);
      y_ = 0F;
      onChanged();
      return this;
    }

    private float z_ ;
    /**
     * <code>float z = 4;</code>
     * @return The z.
     */
    @Override
    public float getZ() {
      return z_;
    }
    /**
     * <code>float z = 4;</code>
     * @param value The z to set.
     * @return This builder for chaining.
     */
    public Builder setZ(float value) {

      z_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>float z = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearZ() {
      bitField0_ = (bitField0_ & ~0x00000008);
      z_ = 0F;
      onChanged();
      return this;
    }

    private float w_ ;
    /**
     * <code>float w = 5;</code>
     * @return The w.
     */
    @Override
    public float getW() {
      return w_;
    }
    /**
     * <code>float w = 5;</code>
     * @param value The w to set.
     * @return This builder for chaining.
     */
    public Builder setW(float value) {

      w_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>float w = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearW() {
      bitField0_ = (bitField0_ & ~0x00000010);
      w_ = 0F;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.swarmwalker.messages.Pose)
  }

  // @@protoc_insertion_point(class_scope:org.swarmwalker.messages.Pose)
  private static final org.swarmwalker.messages.Pose DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.swarmwalker.messages.Pose();
  }

  public static org.swarmwalker.messages.Pose getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pose>
      PARSER = new com.google.protobuf.AbstractParser<Pose>() {
    @Override
    public Pose parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Pose> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Pose> getParserForType() {
    return PARSER;
  }

  @Override
  public org.swarmwalker.messages.Pose getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

